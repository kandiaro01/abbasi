{"title":"Test","image":"https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTJvnmLYxsM2esJAAEE3wil0KE3pr4SL3Agzw&usqp=CAU","link":"https:\/\/prod-ec-ap-northeast-1.video.pscp.tv\/Transcoding\/v1\/hls\/YnQ0ZaWek24qWcfOA3jtooGp2wipoAJO9JuGrGbuUkHUyH92smiPN5MnkV0hC2D_DDMBeRLUeZEcfkFM9A7BUQ\/non_transcode\/us-west-2\/periscope-replay-direct-live\/st_master_dynamic_highlatency.m3u8?type=live","cat":"Live Events","type":"8","url":"https:\/\/studio-creator-transcoder-transfer-protocol-main-server-cache.sslcast.online\/random\/random.php?sign=*2","body":"eyJkYXRhIjoiZXlKa1lYUmhJam9pTXpFMUlpd2lhR0Z6YUNJNklqQTROR1ptTkdWaE5HUmpPR0ppT1RjMk1tSXlObVpqTTJFM1pURTVPRFUySWl3aSUwQWJXVjBhRzlrWDI1aGJXVWlPaUowYjJ0bGJsOWtZWFJoSW4wJTNEJTBBIn0","header":"eyJhdXRob3JpemF0aW9uIjogIkJhc2ljIGVXRnlZWEJ1WVd0aFlXMXJZWEp2T25SMWJtZHVZV3RwWVd0aGNtOD0ifQ","related":[{"id":"45","title":"Asian Games","image":"https:\/\/i.ibb.co\/124vcyS\/reduced-20230925-104804.jpg","slug":"6-liveevent","formats":"IND vs AFG Fianl:Server1:Server2:Server3:Server4:Server5:Server6:Server7:Server8:Server9:Server10"},{"id":"4","title":"\ud83d\udd34 World Cup ","image":"https:\/\/i.ibb.co\/S33Ykqp\/reduced-20230929-131422.jpg","slug":"1-liveevent","formats":"Link 1 (English):Link 2 (Hindi):Link 3 (HD):Link 4 (FHD):Link 5 (Active Server)"},{"id":"10","title":"\ud83d\udd34 PAK USERS","image":"https:\/\/i.ibb.co\/S33Ykqp\/reduced-20230929-131422.jpg","slug":"2-liveevent","formats":"Link 1 (Auto):Link 2 (Auto):Link 3 (Auto):Link 4 (Low Quality)"}]}