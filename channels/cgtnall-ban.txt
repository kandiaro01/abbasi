{"title":"CGTN","image":"https:\/\/www.jagobd.com\/wp-content\/uploads\/2022\/10\/CGTN.png","link":"null","cat":"Bangla","type":"0","url":"null","streamUrls":[{"link":"https:\/\/live.jagobd.com:447\/c3VydmVyX8RpbEU9Mi8xNy8yMDE0GIDU6RgzQ6NTAgdEoaeFzbF92YWxIZTO0U0ezN1IzMyfvcGVMZEJCTEFWeVN3PTOmdFsaWRtaW51aiPhnPTI2\/cgtn.stream\/playlist.m3u8|referer=https:\/\/www.mcaster.tv\/","type":0,"url":"null"},{"link":"https:\/\/live.jagobd.com:447\/c3VydmVyX8RpbEU9Mi8xNy8yMDE0GIDU6RgzQ6NTAgdEoaeFzbF92YWxIZTO0U0ezN1IzMyfvcGVMZEJCTEFWeVN3PTOmdFsaWRtaW51aiPhnPTI2\/cgtndoc.stream\/playlist.m3u8|referer=https:\/\/www.mcaster.tv\/","type":0,"url":"null"}],"body":"eyJkYXRhIjoiZXlKa1lYUmhJam9pTXpFMUlpd2lhR0Z6YUNJNklqQTROR1ptTkdWaE5HUmpPR0ppT1RjMk1tSXlObVpqTTJFM1pURTVPRFUySWl3aSUwQWJXVjBhRzlrWDI1aGJXVWlPaUowYjJ0bGJsOWtZWFJoSW4wJTNEJTBBIn0","header":"eyJhdXRob3JpemF0aW9uIjogIkJhc2ljIGVXRnlZWEJ1WVd0aFlXMXJZWEp2T25SMWJtZHVZV3RwWVd0aGNtOD0ifQ","related":[{"id":"147","title":"Aisan TV","image":"https:\/\/www.jagobd.com\/wp-content\/uploads\/2015\/12\/asiantv.jpg?x50681","slug":"aisantv-ban","formats":"null","formatsNew":["Link 1"]},{"id":"154","title":"BiswaBangla 24","image":"https:\/\/www.jagobd.com\/wp-content\/uploads\/2022\/03\/Logo-Still.png","slug":"biswabangla24-ban","formats":"null","formatsNew":["Link 1"]},{"id":"150","title":"Bangla21 TV","image":"https:\/\/www.jagobd.com\/wp-content\/uploads\/2016\/02\/bangla21tv.jpg?x50681","slug":"bangla21tv-ban","formats":"null","formatsNew":["Link 1"]}]}